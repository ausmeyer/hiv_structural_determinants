getwd()
rm(list = ls())
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
map <- read.table('aas.fasta.map', head=F, stringsAsFactors=F)
rm(list = ls())
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
map <- read.table('aas.fasta.map', head=F, stringsAsFactors=F)
dN.dS <- rates$dN.dS[map$V3]
length(dN.dS)
dim(distances)
rm(list = ls())
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
map <- read.table('aas.fasta.map', head=F, stringsAsFactors=F)
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
dim(distances)
length(dN.dS)
rm(list = ls())
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
map <- read.table('aas.fasta.map', head=F, stringsAsFactors=F)
dN.dS <- rates$dN.dS[map$V3]
best.site <- c()
best.r <- c()
rfree <- c()
for(i in 1:100) {
small.set <- sample(1:length(dN.dS), length(dN.dS)*0.75)
fit.dN.dS <- dN.dS[small.set]
fit.distances <- distances[small.set, ]
fit.rsa <- rsa[small.set]
fit.correlations <- as.vector(sapply(1:ncol(fit.distances), function(x) cor(fit.dN.dS,
predict(lm(fit.dN.dS ~ fit.rsa + fit.distances[, x])))))
best <- which(fit.correlations^2 == max(fit.correlations^2))
best.site <- append(best.site, best)
free.dN.dS <- dN.dS[-small.set]
free.distances <- distances[-small.set, best]
free.rsa <- rsa[-small.set]
free.correlations <- cor(free.dN.dS,
predict(lm(free.dN.dS ~ free.rsa + free.distances)))
best.r <- append(best.r, max(fit.correlations^2))
rfree <- append(rfree, max(free.correlations^2))
}
small.set <- sample(1:length(dN.dS), length(dN.dS)*0.75)
fit.dN.dS <- dN.dS[small.set]
fit.distances <- distances[small.set, ]
fit.rsa <- rsa[small.set]
fit.correlations <- as.vector(sapply(1:ncol(fit.distances), function(x) cor(fit.dN.dS,
predict(lm(fit.dN.dS ~ fit.rsa + fit.distances[, x])))))
fit.dN.dS
dN.dS
map
map$V3
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
dN.dS
small.set <- sample(1:length(dN.dS), length(dN.dS)*0.75)
fit.dN.dS <- dN.dS[small.set]
fit.distances <- distances[small.set, ]
fit.rsa <- rsa[small.set]
fit.correlations <- as.vector(sapply(1:ncol(fit.distances), function(x) cor(fit.dN.dS,
predict(lm(fit.dN.dS ~ fit.rsa + fit.distances[, x])))))
best <- which(fit.correlations^2 == max(fit.correlations^2))
best.site <- append(best.site, best)
free.dN.dS <- dN.dS[-small.set]
free.distances <- distances[-small.set, best]
free.rsa <- rsa[-small.set]
free.correlations <- cor(free.dN.dS,
predict(lm(free.dN.dS ~ free.rsa + free.distances)))
free.rsa
free.dN.dS
rsa
length(rsa)
length(dN.dS)
map
rm(list = ls())
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
map <- read.table('aas.fasta.map', head=F, stringsAsFactors=F)
map <- map$V3[map$V3 != '-']
map
rm(list = ls())
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
map <- read.table('aas.fasta.map', head=F, stringsAsFactors=F)
map
rm(list = ls())
map <- read.table('aas.fasta.map', head=F, stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
rsa <- rsa[map$V3!='-']
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
distances <- distances[map$V3!='-', map$V3!='-']
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
keep.alignment.sites <- map$V3[map$V3 != '-']
dN.dS <- rates$dN.dS[as.numeric(keep.alignment.sites)]
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
zeros
rep(0, 100)
print(mean(best.r))
print(mean(rfree))
print(table(best.site))
fit.site <- as.numeric(names(sort(-table(best.site)))[1])
fit <- lm(dN.dS ~ rsa + distances[, fit.site])
print(summary(fit))
correlations <- as.vector(sapply(1:ncol(distances), function(x) cor(dN.dS,
predict(lm(dN.dS ~ distances[, x])))))
new.correlations <- rep(mean(correlations), length(map$V3))
new.correlations[as.numeric(map$V1[map$V3 != '-'])] <- correlations
write.table(data.frame(new.correlations), file= 'distance_model.correlations', row.names=F, col.names=F)
as.numeric(map$V1[map$V3 != '-'])
map$V1[map$V3 != '-']
map$V2[map$V3 != '-']
print(mean(best.r))
print(mean(rfree))
print(table(best.site))
fit.site <- as.numeric(names(sort(-table(best.site)))[1])
fit <- lm(dN.dS ~ rsa + distances[, fit.site])
print(summary(fit))
correlations <- as.vector(sapply(1:ncol(distances), function(x) cor(dN.dS,
predict(lm(dN.dS ~ distances[, x])))))
new.correlations <- rep(mean(correlations), length(map$V3))
new.correlations[as.numeric(map$V2[map$V3 != '-'])] <- correlations
write.table(data.frame(new.correlations), file= 'distance_model.correlations', row.names=F, col.names=F)
as.numeric(map$V2[map$V3 != '-'])
map$V2[map$V3 != '-']
map <- read.table('aas.fasta.map', sep=', ', head=F, stringsAsFactors=F)
map
map <- read.table('aas.fasta.map', sep=',\t', head=F, stringsAsFactors=F)
map <- read.table('aas.fasta.map', sep=',', head=F, stringsAsFactors=F)
map
map <- read.table('aas.fasta.map', sep=',', head=F, stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
rsa <- rsa[map$V3!='-']
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
distances <- distances[map$V3!='-', map$V3!='-']
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
keep.alignment.sites <- map$V3[map$V3 != '-']
dN.dS <- rates$dN.dS[as.numeric(keep.alignment.sites)]
dN.dS
map <- read.table('aas.fasta.map', sep=',', head=F, stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
rsa <- rsa[map$V3!='-']
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
distances <- distances[map$V3!='-', map$V3!='-']
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
keep.alignment.sites <- map$V3[map$V3 != '-']
dN.dS <- rates$dN.dS[as.numeric(keep.alignment.sites)]
map$V3 != -
c
map$V3 != '-'
map$V3
getwd()
map <- read.table('aas.fasta.map', sep=',', head=F, stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
rsa <- rsa[map$V3!='-']
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
distances <- distances[map$V3!='-', map$V3!='-']
map
map$V3
map <- read.table('aas.fasta.map', sep=',', head=F, stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
rsa <- rsa[map$V3!='-']
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
distances <- distances[map$V3!='-', map$V3!='-']
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
keep.alignment.sites <- map$V3[map$V3 != -]
dN.dS <- rates$dN.dS[as.numeric(keep.alignment.sites)]
map <- read.table('aas.fasta.map', sep=',', head=F, stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
rsa <- rsa[map$V3!='-']
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
distances <- distances[map$V3!='-', map$V3!='-']
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
keep.alignment.sites <- map$V3[map$V3 != '-']
dN.dS <- rates$dN.dS[as.numeric(keep.alignment.sites)]
print(mean(best.r))
print(mean(rfree))
print(table(best.site))
fit.site <- as.numeric(names(sort(-table(best.site)))[1])
fit <- lm(dN.dS ~ rsa + distances[, fit.site])
print(summary(fit))
correlations <- as.vector(sapply(1:ncol(distances), function(x) cor(dN.dS,
predict(lm(dN.dS ~ distances[, x])))))
new.correlations <- rep(mean(correlations), length(map$V3))
new.correlations[as.numeric(map$V2[map$V3 != '-'])] <- correlations
write.table(data.frame(new.correlations), file= 'distance_model.correlations', row.names=F, col.names=F)
new.correlations
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
median
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
correlations
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
rm(list = ls())
map <- read.table('aas.fasta.map', sep=',', head=F, stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
rsa <- rsa[map$V3!='-']
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
distances <- distances[map$V3!='-', map$V3!='-']
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
keep.alignment.sites <- map$V3[map$V3 != '-']
dN.dS <- rates$dN.dS[as.numeric(keep.alignment.sites)]
best.site <- c()
best.r <- c()
rfree <- c()
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
map <- read.table('aas.fasta.map', sep=',', head=F, stringsAsFactors=F)
rsa <- read.table('4tvp_trimer.rsa', head=T, stringsAsFactors=F)$RSA
rsa <- rsa[map$V3!='-']
distances <- read.table('distances.dat', head=F, sep=',', stringsAsFactors=T)
distances <- distances[map$V3!='-', map$V3!='-']
rates <- read.table('sites.dat', head=T, sep=',', stringsAsFactors=F)
keep.alignment.sites <- map$V3[map$V3 != '-']
dN.dS <- rates$dN.dS[as.numeric(keep.alignment.sites)]
plot(rsa, dN.dS)
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
plot(predict(fit), dN.dS)
predict(fit)
cor(predict(fit), dN.dS)
cor(predict(fit), dN.dS)^2
fit <- lm(dN.dS ~ rsa )
cor(predict(fit), dN.dS)^2
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
mean(dN.dS)
source('~/Google Drive/Documents/PostDoc/HIVStructuralDeterminants/hiv_structural_determinants/data/gp120/gp120_structure/predictors/calc_correlations.R')
glyc <- read.table('4TVP_glycosylations.txt', head=F, stringsAsFactors = F)
glyc
fit <- lm(dN.dS ~ glyc)
fit <- lm(dN.dS ~ dN.dS[glyc])
glyc
fit <- lm(dN.dS ~ dN.dS[glyc$V1])
fit <- lm(dN.dS[glyc$V1] ~ dN.dS[glyc$V1])
fit
summary(fit)
length(dN.dS)
glyc <- read.table('4TVP_glycosylations.txt', head=F, stringsAsFactors = F)
glycosylations <- rep('0', length(dN.dS))
glycosylations[glyc] <- 1
fit.site <- as.numeric(names(sort(-table(best.site)))[1])
fit <- lm(dN.dS ~ rsa + distances[, fit.site])
print(summary(fit))
fit <- lm(dN.dS ~ glycosylations)
glycosylations
glyc <- read.table('4TVP_glycosylations.txt', head=F, stringsAsFactors = F)
glycosylations <- rep(0, length(dN.dS))
glycosylations[glyc] <- 1
fit.site <- as.numeric(names(sort(-table(best.site)))[1])
fit <- lm(dN.dS ~ rsa + distances[, fit.site])
print(summary(fit))
glycosylations
glyc
glyc <- read.table('4TVP_glycosylations.txt', head=F, stringsAsFactors = F)
glycosylations <- rep(0, length(dN.dS))
glycosylations[glyc$V1] <- 1
fit.site <- as.numeric(names(sort(-table(best.site)))[1])
fit <- lm(dN.dS ~ rsa + distances[, fit.site])
print(summary(fit))
glyc
glycosylations
fit <- lm(dN.dS ~ glycosylations)
summary(fit)
glyc <- read.table('4TVP_glycosylations.txt', head=F, stringsAsFactors = F)
glycosylations <- rep(0, length(dN.dS))
glycosylations[glyc$V1] <- 1
fit.site <- as.numeric(names(sort(-table(best.site)))[1])
fit <- lm(dN.dS ~ rsa + distances[, fit.site] + glycosylations)
print(summary(fit))
summary(fit)
glyc <- read.table('4TVP_glycosylations.txt', head=F, stringsAsFactors = F)
glycosylations <- rep(0, length(dN.dS))
glycosylations[glyc$V1] <- 1
fit.site <- as.numeric(names(sort(-table(best.site)))[1])
fit <- lm(dN.dS ~ distances[, fit.site] + glycosylations)
print(summary(fit))
summary(fit.rsa)
fit <- lm(dN.dS ~ distances[, fit.site])
print(summary(fit))
fit <- lm(dN.dS ~ rsa + glycosylations)
print(summary(fit))
